apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name.firstservice }}
  labels:
    app: {{ .Values.service.name.firstservice }}-{{ .Release.Namespace }}
    app.kubernetes.io/name: {{ .Values.service.name.firstservice }}
    helm.sh/chart: {{ include "helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.service.name.firstservice }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
        {{- range $key, $val := .Values.annotations }}
        {{ $key }}: {{ $val }}
        {{- end }}
      labels:
        app: {{ .Values.service.name.firstservice }}-{{ .Release.Namespace }}
        app.kubernetes.io/name: {{ .Values.service.name.firstservice }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.firstservicerepository }}:{{ .Values.image.tag.firstservice }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- range $arg := .Values.args }}
            - {{ $arg }}
            {{- end }}
          env:
            - name: SERVICE_NAME
              value: "{{ .Values.service.name.firstservice }}"
            - name: CLUSTER_IDENTIFIER
              value: "{{ .Values.service.identifier }}"
            - name: server.port
              value: "{{ .Values.service.port.firstservice }}"
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
            {{- end }}
          ports:
            {{- range $key, $val := .Values.additionalPorts }}
            - name: {{ $key }}
              containerPort: {{ $val }}
              protocol: TCP
            {{- end }}
{{ if .Values.service.enabled }}
            - name: http
              containerPort: {{ .Values.service.port.firstservice }}
              protocol: TCP
{{ if eq .Values.probe.type "tcp" }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.port.firstservice }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.port.firstservice }}
            initialDelaySeconds: 15
            periodSeconds: 30
{{ else }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probe.path }}
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: {{ .Values.probe.path }}
              port: http
            initialDelaySeconds: 15
            periodSeconds: 30
{{ end }}
{{ end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
    name: {{ .Values.service.name.firstservice }}
    namespace: {{ .Release.Namespace }}
spec:
    maxReplicas: {{ .Values.service.autoScalingConfigration.firstservicemaxReplicas }}
    minReplicas: {{ .Values.service.autoScalingConfigration.firstserviceminReplicas }}
    scaleTargetRef:
      apiVersion: apps/v1beta1
      kind: Deployment
      name: {{ .Values.service.name.firstservice }}
    metrics:
    - type: Resource
      resource:
        name: {{ .Values.service.autoScalingConfigration.firstservicetargetOn }}
        targetAverageUtilization: {{ .Values.service.autoScalingConfigration.firstservicetargetAverageUtilization }}
